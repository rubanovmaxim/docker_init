version: "3"

services:
  app:
    image: maksru/bookstore:hw_8
    links:
      - database-server:database
    environment:
      - spring.datasource.url=jdbc:postgresql://bookstore-db:5432/bookstore
      - spring.datasource.username=postgres
      - spring.datasource.password=admin
      - bookstore.cache.url=http://memory-cache:8083
      - nats.usl=nats://nats-messaging:4222
      - nats.subject=notification
    depends_on:
      - database-server
      - nats
    ports:
      - 8082:8082

  caching-service:
    image: maksru/caching:hw_7
    container_name: memory-cache
    hostname: memory-cache
    environment:
      - spring.datasource.url=jdbc:postgresql://bookstore-db:5432/bookstore
      - spring.datasource.username=postgres
      - spring.datasource.password=admin
    depends_on:
      - database-server
    ports:
      - 8083:8083

  notification-service:
    image: maksru/notification:hw_8
    container_name: notification
    hostname: notification
    environment:
      - spring.datasource.url=jdbc:postgresql://bookstore-db:5432/bookstore
      - spring.datasource.username=postgres
      - spring.datasource.password=admin
      - nats.usl=nats://nats-messaging:4222
      - nats.subject=notification
    depends_on:
      - database-server
      - nats
    ports:
      - 8084:8084

  database-server:
    container_name: bookstore-db
    hostname: bookstore-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=bookstore
    image: maksru/bookstore:hw_db_2
    ports:
      - 5432:5432
    volumes:
       - ./sql:/docker-entrypoint-initdb.d

  nats:
    image: nats:alpine3.10
    container_name: nats-messaging
    hostname: nats-messaging
    ports:
      - 4222:4222



  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
     # - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
     # - '--storage.tsdb.path=/prometheus'
    #  - '--web.console.libraries=/etc/prometheus/console_libraries'
     # - '--web.console.templates=/etc/prometheus/consoles'
    #  - '--storage.tsdb.retention.time=200h'
    #  - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
        - '9090:9090'
  #  networks:
   #   - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    restart: always


  grafana:
    image: grafana/grafana:latest
    environment:
        - GF_SECURITY_ADMIN_PASSWORD=pass
    depends_on:
        - prometheus
    ports:
        - "3000:3000"
